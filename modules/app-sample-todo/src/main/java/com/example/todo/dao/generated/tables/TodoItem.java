/*
 * This file is generated by jOOQ.
*/
package com.example.todo.dao.generated.tables;


import com.example.todo.dao.generated.Keys;
import com.example.todo.dao.generated.Public;
import com.example.todo.dao.generated.tables.records.TodoItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoItem extends TableImpl<TodoItemRecord> {

    private static final long serialVersionUID = -1899740004;

    /**
     * The reference instance of <code>public.todo_item</code>
     */
    public static final TodoItem TODO_ITEM = new TodoItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TodoItemRecord> getRecordType() {
        return TodoItemRecord.class;
    }

    /**
     * The column <code>public.todo_item.id</code>.
     */
    public final TableField<TodoItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('todo_item_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.todo_item.name</code>.
     */
    public final TableField<TodoItemRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.todo_item.checked</code>.
     */
    public final TableField<TodoItemRecord, Boolean> CHECKED = createField("checked", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.todo_item.created_by</code>.
     */
    public final TableField<TodoItemRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.todo_item.deleted</code>.
     */
    public final TableField<TodoItemRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.todo_item.session</code>.
     */
    public final TableField<TodoItemRecord, String> SESSION = createField("session", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.todo_item</code> table reference
     */
    public TodoItem() {
        this("todo_item", null);
    }

    /**
     * Create an aliased <code>public.todo_item</code> table reference
     */
    public TodoItem(String alias) {
        this(alias, TODO_ITEM);
    }

    private TodoItem(String alias, Table<TodoItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private TodoItem(String alias, Table<TodoItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TodoItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_TODO_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TodoItemRecord> getPrimaryKey() {
        return Keys.TODO_ITEM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TodoItemRecord>> getKeys() {
        return Arrays.<UniqueKey<TodoItemRecord>>asList(Keys.TODO_ITEM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TodoItem as(String alias) {
        return new TodoItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoItem rename(String name) {
        return new TodoItem(name, null);
    }
}
