/*
 * This file is generated by jOOQ.
*/
package com.example.todo.dao.generated.tables;


import com.example.todo.dao.generated.Keys;
import com.example.todo.dao.generated.Public;
import com.example.todo.dao.generated.tables.records.TodoListRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoList extends TableImpl<TodoListRecord> {

    private static final long serialVersionUID = -1526303617;

    /**
     * The reference instance of <code>public.todo_list</code>
     */
    public static final TodoList TODO_LIST = new TodoList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TodoListRecord> getRecordType() {
        return TodoListRecord.class;
    }

    /**
     * The column <code>public.todo_list.id</code>.
     */
    public final TableField<TodoListRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('todo_list_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.todo_list.name</code>.
     */
    public final TableField<TodoListRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.todo_list</code> table reference
     */
    public TodoList() {
        this("todo_list", null);
    }

    /**
     * Create an aliased <code>public.todo_list</code> table reference
     */
    public TodoList(String alias) {
        this(alias, TODO_LIST);
    }

    private TodoList(String alias, Table<TodoListRecord> aliased) {
        this(alias, aliased, null);
    }

    private TodoList(String alias, Table<TodoListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TodoListRecord, Long> getIdentity() {
        return Keys.IDENTITY_TODO_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TodoListRecord> getPrimaryKey() {
        return Keys.TODO_LIST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TodoListRecord>> getKeys() {
        return Arrays.<UniqueKey<TodoListRecord>>asList(Keys.TODO_LIST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TodoList as(String alias) {
        return new TodoList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoList rename(String name) {
        return new TodoList(name, null);
    }
}
